input {
   udp {
     host => "0.0.0.0"
     port => 9909
     type => syslog
     id => rsyslog_9909
     tags => ["pihole","9909"]
     }
 udp {
     host => "0.0.0.0"
     port => 7000
     type => syslog
     id => rsyslog_7000
     tags => ["unifi","7000"]
     }
udp {
     host => "0.0.0.0""
     port => 7001
     type => syslog
     id => rsyslog_7001
     tags => ["camera","7001"]
     }
udp {
     host => "0.0.0.0"
     port => 7002
     type => syslog
     id => rsyslog_7002
     tags => ["nas","7002"]
     }
udp {
     host => "0.0.0.0"
     port => 7003
     type => syslog
     id => rsyslog_7003
     tags => ["bigip","7003"]
     }
udp {
     host => "0.0.0.0"
     port => 7004
     type => syslog
     id => rsyslog_7004
     tags => ["network","7004"]
     }
 udp {
     host => "0.0.0.0"
     port => 7005
     type => syslog
     id => rsyslog_7005
     tags => ["windows","7005"]
     }
udp {
     host => "0.0.0.0"
     port => 7006
     type => syslog
     id => rsyslog_7006
     tags => ["linux","7006"]
     }
udp {
     host => "0.0.0.0"
     port => 7007
     type => syslog
     id => rsyslog_7007
     tags => ["ups","7007"]
     }
udp {
     host => "0.0.0.0"
     port => 7008
     type => syslog
     id => rsyslog_7008
     tags => ["apm","7008"]
     }
udp {
     host => "0.0.0.0"
     port => 7009
     type => syslog
     id => rsyslog_7009
     tags => ["rsyslog","7009"]
     }
}

filter {
if "9909" in [tags] 
{
                mutate {
                        add_field => { "[@metadata][index]" => "pihole" }
                }

grok {
        match => { "message" => ['%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} dnsmasq\[%{GREEDYDATA:dnsmasq_pid}\]: %{NUMBER:query_id} %{IPORHOST:dns_client}\/%{NUMBER:src_port} query\[%{GREEDYDATA:query_type}\] %{GREEDYDATA:query} from %{IPORHOST:query_client}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} dnsmasq\[%{GREEDYDATA:dnsmasq_pid}\]: %{NUMBER:query_id} %{IPORHOST:dns_client}\/%{NUMBER:src_port} cached %{GREEDYDATA:cached_query} is %{GREEDYDATA:cached_answer}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} dnsmasq\[%{GREEDYDATA:dnsmasq_pid}\]: %{NUMBER:query_id} %{IPORHOST:dns_client}\/%{NUMBER:src_port} reply %{GREEDYDATA:query} is %{GREEDYDATA:query_answer}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} dnsmasq\[%{GREEDYDATA:dnsmasq_pid}\]: %{NUMBER:query_id} %{IPORHOST:dns_client}\/%{NUMBER:src_port} forwarded %{GREEDYDATA:foward_query} to %{GREEDYDATA:dns_server}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} sudo: %{GREEDYDATA:syslog_msg}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} dnsmasq\[%{GREEDYDATA:dnsmasq_pid}\]: %{NUMBER:query_id} %{IPORHOST:dns_client}\/%{NUMBER:src_port} gravity blocked %{GREEDYDATA:blocked_query} is %{GREEDYDATA:blocked_query_answer}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} sshd\[%{GREEDYDATA:sshd_pid}\]: %{GREEDYDATA:ssh_msg} %{IPORHOST:src_ip} port %{NUMBER:src_port} %{GREEDYDATA:ssh_status}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} dnsmasq\[%{GREEDYDATA:dnsmasq_pid}\]: %{NUMBER:query_id} %{IPORHOST:dns_client}\/%{NUMBER:src_port} /etc/hosts %{IPORHOST:host_file_lookup} is %{IPORHOST:host_file_answer}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} lighttpd\[%{GREEDYDATA:lighttpd_pid}\]: sudo%{GREEDYDATA:syslog_msg}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:pihole} %{GREEDYDATA:syslog_msg}']
}
}
}

if "7000" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "unifi" }
}

grok {
        match => { "message" => [
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_SECURITY_UCAST_KEY_SET \( %{GREEDYDATA:wal_dbgid_security_ucast_key_set} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_SECURITY_ALLOW_DATA \( %{GREEDYDATA:wal_dbgid_security_allow_data} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_TX_BA_SETUP \( %{GREEDYDATA:wal_dbgid_tx_ba_setup} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_SECURITY_ENCR_EN \( %{GREEDYDATA:wal_dbgid_security_encr_en} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_TX_AC_BUFFER_SET \( %{GREEDYDATA:wal_dbgid_tx_ac_buffer_set} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WLAN_DEBUG_DBGID_PEER \( %{GREEDYDATA:wal_dbgid_security_allow_data} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_SECURITY_MCAST_KEY_SET \( %{GREEDYDATA:wal_dbgid_security_mcast_key_set} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] WAL_DBGID_SET_HW_FILTER \( %{GREEDYDATA:wal_dbgid_set_hw_filter} \)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{GREEDYDATA:process}\] %{GREEDYDATA}\(%{WORD:vap}\):iwpriv\[%{GREEDYDATA:iwpriv_id}\] ieee80211_ioctl_kickmac sta %{MAC:station}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] ieee80211_update_node_ecm_flags: node with aid %{NUMBER:nod_aid} and mac %{MAC:station} has been tagged \[ %{GREEDYDATA:node_tag} \]',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] RATE: %{WORD:rate_type} %{NUMBER:rate_number}, peer_mac %{GREEDYDATA:peer_mac}, phymode %{NUMBER:phymode}, ni_flags %{GREEDYDATA:ni_flags}. vht_mcs_set %{GREEDYDATA:vht_mcs_set}, ht_mcs_set %{GREEDYDATA:ht_mcs_set}, legacy_rate_set %{GREEDYDATA:legacy_rate_set}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\]  ieee80211_ioctl_kickmac\[%{GREEDYDATA:ioctl_kickmac_id}\]',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{WORD:vap}\] ieee80211_ucfg_setparam: node %{MAC:station} dvlan: %{NUMBER:dvlan}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[STA_TRACKER\]%{GREEDYDATA:msg} %{MAC:station} - retries: %{NUMBER:retries}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[STA_TRACKER\] %{GREEDYDATA:msg} \[STA:%{GREEDYDATA:station}\]\[QUERY: %{GREEDYDATA:dns_query}\] \[DNS_SERVER :%{IPORHOST:dns_server}\] \[TXN_ID %{GREEDYDATA:txn_id}\] \[SRCPORT %{NUMBER:src_port}\]',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: hostapd: %{WORD:vap}: STA %{GREEDYDATA:station} WPA: %{GREEDYDATA:wpa_message}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: hostapd: %{WORD:vap}: STA %{GREEDYDATA:station} RADIUS: %{GREEDYDATA:radius_message}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: hostapd: %{WORD:vap}: STA %{GREEDYDATA:station} IEEE 802.11: %{WORD:event}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: hostapd: %{WORD:vap}: STA %{GREEDYDATA:station} DRIVER: %{GREEDYDATA:driver} addr=%{MAC:station} status_code=%{NUMBER:status_code}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: dropbear\[%{NUMBER:dropbear_pid}\]: %{GREEDYDATA:dropbear_status}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: dropbear\[%{NUMBER:dropbear_pid}\]: Child connection from %{IP:client_ip}:%{NUMBER:port}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: %{WORD:process1}\[%{NUMBER:pid1}\]: %{WORD:process2}\[%{NUMBER:pid2}\]: wireless_agg_stats.log_sta_anomalies\(\): bssid=%{GREEDYDATA:bssid} radio=%{WORD:radio} vap=%{WORD:vap} sta=%{GREEDYDATA:station} satisfaction_now=%{NUMBER:satisfaction} anomalies=%{GREEDYDATA:anomalies}','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: libubnt\[%{NUMBER:libubnt_pid}\]: wevent\[%{NUMBER:wevent_pid}\]: wevent.ubnt_custom_event\(\): %{WORD:event_type} %{WORD:vap}: %{GREEDYDATA:station} / %{NUMBER}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: libubnt\[%{NUMBER:libubnt_pid}\]: mcad\[%{NUMBER:mcad_pid}\]: ace_reporter.reporter_handle_response_json\(\): rate-update: %{MAC:station} ul: \(%{GREEDYDATA:upload_rate}\), dl: \(%{GREEDYDATA:download_rate}\)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: stamgr: kick-sta-on %{MAC:station} %{WORD:vap} \(reason:%{GREEDYDATA:reason}\)',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] ubnt_sta_log_success: odd ip_observed_ts: %{NUMBER:ip_observed_ts} vs %{NUMBER:vs}\[STA_TRACKER\] %{GREEDYDATA:event_type}; \[STA: %{MAC:station}\]\[QUERY: %{IPORHOST:query}\] \[DNS_SERVER :%{IPORHOST:dns_server}\] \[TXN_ID %{GREEDYDATA:txn_id}\] \[SRCPORT %{NUMBER:src_port}\]',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: : %{GREEDYDATA:process}\[%{NUMBER:pid}\]: uplink-monitor.rtnetlink_receive\(\): netlink: recvfrom failed: %{GREEDYDATA:msg}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: %{WORD:process1}\[%{NUMBER:pid1}\]: %{WORD:process2}\[%{NUMBER:pid2}\]: wevent.wevent_receive\(\): netlink: recvfrom failed: %{GREEDYDATA:msg}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] ubnt_sta_log_success: odd ip_observed_ts: %{NUMBER:ip_observed_ts} vs %{NUMBER:vs}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: kernel: \[%{GREEDYDATA:pid}\] \[%{GREEDYDATA:wifi}\] FWLOG: \[%{NUMBER:fwlog_number}\] AP PS: %{GREEDYDATA:ps_msg}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: libubnt\[%{NUMBER:libubnt_pid}\]: mcad\[%{NUMBER:mcad_pid}\]: lldp.ubnt_get_lldp_json\(\): %{GREEDYDATA:lldp_msg}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}: sysmon\[%{NUMBER:sysmon_pid}\]: lldp.ubnt_get_lldp_json\(\): %{GREEDYDATA:lldp_msg}',
'%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{WORD:ap_mac},%{GREEDYDATA:ap_firmware}:%{GREEDYDATA}\[STA-TRACKER\].stahtd_dump_event\(\):%{GREEDYDATA:json_data}'
]
 }
}
 json {
        source => "json_data"
#	target => "parsed_json"
      }
}
if "7001" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "camera" }
}
grok {
        match => { "message" => ['%{SYSLOG5424PRI} %{CISCOTIMESTAMP} %{IP:camera_ip} %{QS:action}
{
   %{QS} : %{QS:client_ip}
}','%{SYSLOG5424PRI} %{CISCOTIMESTAMP} %{IP:camera_ip} %{QS:action}
{
   %{QS} : %{QS:client_ip},
   %{QS} : %{QS:service}
}']}
}
}
if "7002" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "nas" }
                }
grok {
match => { "message" => ['%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{IPORHOST} Connection: User \[%{WORD:username}\] from \[%{GREEDYDATA:src_hostname}\(%{IPORHOST:src_ip}\)\] via \[%{WORD:service}\(%{WORD:service_version}\)\] %{GREEDYDATA:action} \[%{GREEDYDATA:share}\]','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{IPORHOST} Connection: User \[%{WORD:username}\] from \[%{IPORHOST:src}\] logged out the server via \[%{WORD:service}\] with totally \[%{GREEDYDATA:upload_amount}\] uploaded and \[%{GREEDYDATA:download_amount}\] downloaded.','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{IPORHOST} Connection: User \[%{WORD:username}\] from \[%{IPORHOST:src}\] logged in successfully via \[%{WORD:service}\].','%{SYSLOG5424PRI}%{CISCOTIMESTAMP} %{IPORHOST} %{GREEDYDATA:service} Event: %{WORD:action}, Path: %{GREEDYDATA:path}, File/Folder: %{WORD:media_type}, Size: %{NUMBER:media_size} %{WORD:bit_type}, User: %{WORD:username}, IP: %{IP:src_ip}']}
}
}
if "7003" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "bigip" }
                }
}
if "7004" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "network" }
                }
grok {
        match => { "message" => ['firewall,info %{GREEDYDATA:rule} %{WORD:table}: in:%{GREEDYDATA:in_intrerface} out:\(%{GREEDYDATA:out_interface}\), src-mac %{MAC:src_mac}, proto %{WORD:protocol}, %{IP:src_ip}:%{NUMBER:src_port}->%{IP:dst_ip}:%{NUMBER:dst_port}, len %{NUMBER:len}','firewall,info %{GREEDYDATA:rule} %{WORD:table}: in:%{GREEDYDATA:in_intrerface} out:%{GREEDYDATA:out_interface}, src-mac %{MAC:src_mac}, proto %{WORD:protocol} \(%{GREEDYDATA:flags}\), %{IP:src_ip}:%{NUMBER:src_port}->%{IP:dst_ip}:%{NUMBER:dst_port}, len %{NUMBER:len}','dhcp,info %{GREEDYDATA:vlan} deassigned %{IP:ip_address} from %{MAC:client_mac}','dhcp,info %{GREEDYDATA:vlan} assigned %{IP:ip_address} to %{MAC:client_mac}','system,info filter %{GREEDYDATA:filter_msg}','system,info,account user %{WORD:user} %{GREEDYDATA:action} from %{IP:src_ip} via %{WORD:service}']}
}
}
if "7005" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "windows" }
                }
}
if "7006" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "linux" }
                }
}
if "7007" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "ups" }
                        add_tag => ["ups"]
                }

}
if "7008" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "apm" }
                        add_tag => ["apm"]
                }
      kv {
    field_split => ","
    value_split => "="
 }
}
if "7009" in [tags] {
                mutate {
                        add_field => { "[@metadata][index]" => "rsyslog" }
                        add_tag => ["rsyslog"]
                }
}
}
